import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.*;
import java.time.LocalDate;

public class AttendanceSystem extends JFrame {

    Connection conn;

    JTextField nameField, rollField;
    JTextArea outputArea;

    AttendanceSystem() {
        setTitle("Student Attendance System");
        setSize(600, 500);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLayout(new FlowLayout());

        connectToDatabase();

        JLabel nameLabel = new JLabel("Name:");
        nameField = new JTextField(20);
        JLabel rollLabel = new JLabel("Roll No:");
        rollField = new JTextField(20);

        JButton addBtn = new JButton("Add Student");
        JButton markPresentBtn = new JButton("Mark Present");
        JButton markAbsentBtn = new JButton("Mark Absent");
        JButton viewBtn = new JButton("View Attendance");

        outputArea = new JTextArea(20, 50);
        JScrollPane scroll = new JScrollPane(outputArea);

        add(nameLabel);
        add(nameField);
        add(rollLabel);
        add(rollField);
        add(addBtn);
        add(markPresentBtn);
        add(markAbsentBtn);
        add(viewBtn);
        add(scroll);

        addBtn.addActionListener(e -> addStudent());
        markPresentBtn.addActionListener(e -> markAttendance("Present"));
        markAbsentBtn.addActionListener(e -> markAttendance("Absent"));
        viewBtn.addActionListener(e -> viewAttendance());
    }

    void connectToDatabase() {
        try {
            conn = DriverManager.getConnection("jdbc:sqlite:attendance.db");
        } catch (SQLException e) {
            showError("Database Connection Failed: " + e.getMessage());
        }
    }

    void addStudent() {
        String name = nameField.getText();
        String roll = rollField.getText();
        try {
            PreparedStatement pst = conn.prepareStatement("INSERT INTO students (name, roll_no) VALUES (?, ?)");
            pst.setString(1, name);
            pst.setString(2, roll);
            pst.executeUpdate();
            showMessage("Student Added!");
        } catch (SQLException e) {
            showError("Error: " + e.getMessage());
        }
    }

    void markAttendance(String status) {
        String roll = rollField.getText();
        String date = LocalDate.now().toString();
        try {
            PreparedStatement pst = conn.prepareStatement("INSERT INTO attendance (roll_no, date, status) VALUES (?, ?, ?)");
            pst.setString(1, roll);
            pst.setString(2, date);
            pst.setString(3, status);
            pst.executeUpdate();
            showMessage("Attendance Marked as " + status);
        } catch (SQLException e) {
            showError("Error: " + e.getMessage());
        }
    }

    void viewAttendance() {
        try {
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM attendance ORDER BY date DESC");

            StringBuilder sb = new StringBuilder();
            while (rs.next()) {
                sb.append(rs.getString("roll_no"))
                  .append(" - ")
                  .append(rs.getString("date"))
                  .append(" - ")
                  .append(rs.getString("status"))
                  .append("\n");
            }
            outputArea.setText(sb.toString());
        } catch (SQLException e) {
            showError("Error: " + e.getMessage());
        }
    }

    void showMessage(String message) {
        JOptionPane.showMessageDialog(this, message);
    }

    void showError(String message) {
        JOptionPane.showMessageDialog(this, message, "Error", JOptionPane.ERROR_MESSAGE);
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new AttendanceSystem().setVisible(true));
    }
}
